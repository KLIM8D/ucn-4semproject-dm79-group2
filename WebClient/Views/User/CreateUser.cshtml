@using System.Web.Optimization
@model global::WebClient.Models.UserViewModel

@{
    ViewBag.Title = "Opret bruger";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Opret en ny bruger til rejsekortet</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            <span style="color: red;">@Html.ValidationMessageFor(model => model.FirstName)</span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SurName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SurName)
             <span style="color: red;">@Html.ValidationMessageFor(model => model.SurName)</span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Ssn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Ssn)
             <span style="color: red;">@Html.ValidationMessageFor(model => model.Ssn)</span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PhoneNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNo)
             <span style="color: red;">@Html.ValidationMessageFor(model => model.PhoneNo)</span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EMail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EMail)
             <span style="color: red;">@Html.ValidationMessageFor(model => model.EMail)</span>
        </div>

        <div class="editor-label">
             @Html.LabelFor(model => model.Street)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Street)
             <span style="color: red;">@Html.ValidationMessageFor(model => model.Street)</span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ZipCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ZipCode, null, "TxtZipCode")
             <span style="color: red;">@Html.ValidationMessageFor(model => model.ZipCode)</span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.City, new 
        { disabled = "disabled", @readonly = "readonly" , @id = "TxtCity"})
             <span style="color: red;">@Html.ValidationMessageFor(model => model.City)</span>
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
             <span style="color: red;">@Html.ValidationMessageFor(model => model.UserName)</span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
             <span style="color: red;">@Html.ValidationMessageFor(model => model.Password)</span>
        </div>

        <p>
            <input type="submit" value="Opret" />
        </p>
    </fieldset>
}

<script language="javascript">
$('#TxtZipCode').change(function(){
    var recordId = this.value;
    $.getJSON("/User/GetCityByZipCode",
        {
            zipCode: recordId
        },
        function (data) {
            $('#TxtCity').val(data.CityName);
        });
});
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>